{"ast":null,"code":"var _jsxFileName = \"D:\\\\Git projects\\\\spotify-clone-jos\\\\frontend\\\\src\\\\components\\\\Playlists.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './Playlists.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Playlists = () => {\n  _s();\n\n  const [playlists, setPlaylists] = useState({});\n  const [isLoading, setLoading] = useState(true);\n\n  async function fetchData() {\n    const res = await fetch(\"api/users/playlists\");\n    res.json().then(res => {\n      setPlaylists(res.items.map(item => {\n        return {\n          name: item.name,\n          //href: item.externalUrls.externalUrls.spotify,\n          href: item.href\n        };\n      }, []));\n      setLoading(false);\n    }).catch(error => console.log(error));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [setPlaylists, setLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlists-panel\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Getting playlists...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"playlists-title\",\n        children: \"Playlists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlists-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: playlist.href,\n          className: \"playlists-link\",\n          children: playlist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Playlists, \"MFXLvESatX24dJ4wJbq4vfuBhEE=\");\n\n_c = Playlists;\nexport default Playlists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"names":["React","useEffect","useState","Playlists","playlists","setPlaylists","isLoading","setLoading","fetchData","res","fetch","json","then","items","map","item","name","href","catch","error","console","log","playlist"],"sources":["D:/Git projects/spotify-clone-jos/frontend/src/components/Playlists.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport './Playlists.css'\r\n\r\nconst Playlists = () => {\r\n  const [playlists, setPlaylists] = useState({});\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  async function fetchData() {\r\n    const res = await fetch(\"api/users/playlists\");\r\n    res.json()\r\n      .then(res => {\r\n        setPlaylists(res.items.map(item => {\r\n            return {\r\n              name: item.name, \r\n              //href: item.externalUrls.externalUrls.spotify,\r\n              href: item.href\r\n            }\r\n          }, []))\r\n        setLoading(false)\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [setPlaylists, setLoading]);\r\n\r\n  return (\r\n    <div className=\"playlists-panel\">\r\n        {(isLoading ? <p>Getting playlists...</p> : \r\n          <div>\r\n            <h3 className=\"playlists-title\">Playlists</h3>\r\n            {playlists.map(playlist => \r\n              <div className=\"playlists-item\">\r\n                <a href={playlist.href} className=\"playlists-link\">{playlist.name}</a>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\nexport default Playlists;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACI,SAAD,EAAYC,UAAZ,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;;EAEA,eAAeM,SAAf,GAA2B;IACzB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qBAAD,CAAvB;IACAD,GAAG,CAACE,IAAJ,GACGC,IADH,CACQH,GAAG,IAAI;MACXJ,YAAY,CAACI,GAAG,CAACI,KAAJ,CAAUC,GAAV,CAAcC,IAAI,IAAI;QAC/B,OAAO;UACLC,IAAI,EAAED,IAAI,CAACC,IADN;UAEL;UACAC,IAAI,EAAEF,IAAI,CAACE;QAHN,CAAP;MAKD,CANU,EAMR,EANQ,CAAD,CAAZ;MAOAV,UAAU,CAAC,KAAD,CAAV;IACD,CAVH,EAWGW,KAXH,CAWSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAXlB;EAYD;;EAEDlB,SAAS,CAAC,MAAM;IACdO,SAAS;EACV,CAFQ,EAEN,CAACH,YAAD,EAAeE,UAAf,CAFM,CAAT;EAIA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,UACMD,SAAS,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAH,gBACT;MAAA,wBACE;QAAI,SAAS,EAAC,iBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGF,SAAS,CAACU,GAAV,CAAcQ,QAAQ,iBACrB;QAAK,SAAS,EAAC,gBAAf;QAAA,uBACE;UAAG,IAAI,EAAEA,QAAQ,CAACL,IAAlB;UAAwB,SAAS,EAAC,gBAAlC;UAAA,UAAoDK,QAAQ,CAACN;QAA7D;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADD,CAFH;IAAA;MAAA;MAAA;MAAA;IAAA;EAFN;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAtCD;;GAAMb,S;;KAAAA,S;AAuCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}